// <auto-generated />
using System;
using LibraryWebApi.Databases;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LibraryWebApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201124075333_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("LibraryWebApi.Models.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AuthorizationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorizationId");

                    b.ToTable("AccountsTable");
                });

            modelBuilder.Entity("LibraryWebApi.Models.Entities.AuthorizationLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AuthorizationLevelsTable");
                });

            modelBuilder.Entity("LibraryWebApi.Models.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("WhenLent")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("BooksTable");
                });

            modelBuilder.Entity("LibraryWebApi.Models.Entities.CategorizationEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("WhatId")
                        .HasColumnType("int");

                    b.Property<DateTime>("When")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("WhatId");

                    b.ToTable("CategorizationEventsTable");
                });

            modelBuilder.Entity("LibraryWebApi.Models.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoriesTable");
                });

            modelBuilder.Entity("LibraryWebApi.Models.Entities.Account", b =>
                {
                    b.HasOne("LibraryWebApi.Models.Entities.AuthorizationLevel", "AuthorizationLevel")
                        .WithMany("WhoHasTheLevel")
                        .HasForeignKey("AuthorizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuthorizationLevel");
                });

            modelBuilder.Entity("LibraryWebApi.Models.Entities.Book", b =>
                {
                    b.HasOne("LibraryWebApi.Models.Entities.Account", "WhomLent")
                        .WithMany("BorrowedBooks")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WhomLent");
                });

            modelBuilder.Entity("LibraryWebApi.Models.Entities.CategorizationEvent", b =>
                {
                    b.HasOne("LibraryWebApi.Models.Entities.Category", "CategorizeAs")
                        .WithMany("Events")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryWebApi.Models.Entities.Book", "What")
                        .WithMany("Categorized")
                        .HasForeignKey("WhatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategorizeAs");

                    b.Navigation("What");
                });

            modelBuilder.Entity("LibraryWebApi.Models.Entities.Account", b =>
                {
                    b.Navigation("BorrowedBooks");
                });

            modelBuilder.Entity("LibraryWebApi.Models.Entities.AuthorizationLevel", b =>
                {
                    b.Navigation("WhoHasTheLevel");
                });

            modelBuilder.Entity("LibraryWebApi.Models.Entities.Book", b =>
                {
                    b.Navigation("Categorized");
                });

            modelBuilder.Entity("LibraryWebApi.Models.Entities.Category", b =>
                {
                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
