// <auto-generated />
using System;
using LBS2.Databases;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LBS2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201124175352_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("LBS2.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AuthorizationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorizationId");

                    b.ToTable("AccountsTbl");
                });

            modelBuilder.Entity("LBS2.Entities.AuthorizationLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AuthorizationLevelsTbl");
                });

            modelBuilder.Entity("LBS2.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BooksTbl");
                });

            modelBuilder.Entity("LBS2.Entities.BookCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("When")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WhoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("WhoId");

                    b.ToTable("BookCategoriesTbl");
                });

            modelBuilder.Entity("LBS2.Entities.Borrowing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime>("WhenBorrowed")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("BookId");

                    b.ToTable("BorrowingsTbl");
                });

            modelBuilder.Entity("LBS2.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoriesTbl");
                });

            modelBuilder.Entity("LBS2.Entities.Account", b =>
                {
                    b.HasOne("LBS2.Entities.AuthorizationLevel", "LevelOfAuthorization")
                        .WithMany("AccountsOfTheLevel")
                        .HasForeignKey("AuthorizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LevelOfAuthorization");
                });

            modelBuilder.Entity("LBS2.Entities.BookCategory", b =>
                {
                    b.HasOne("LBS2.Entities.Book", "WhatBook")
                        .WithMany("BelongsToCatgegories")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LBS2.Entities.Category", "WhatCategory")
                        .WithMany("BooksBelongsToCategory")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LBS2.Entities.Account", "Who")
                        .WithMany()
                        .HasForeignKey("WhoId");

                    b.Navigation("WhatBook");

                    b.Navigation("WhatCategory");

                    b.Navigation("Who");
                });

            modelBuilder.Entity("LBS2.Entities.Borrowing", b =>
                {
                    b.HasOne("LBS2.Entities.Account", "WhoBorrowed")
                        .WithMany("BooksBorrowed")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LBS2.Entities.Book", "BorrowedBook")
                        .WithMany("Borrowings")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BorrowedBook");

                    b.Navigation("WhoBorrowed");
                });

            modelBuilder.Entity("LBS2.Entities.Account", b =>
                {
                    b.Navigation("BooksBorrowed");
                });

            modelBuilder.Entity("LBS2.Entities.AuthorizationLevel", b =>
                {
                    b.Navigation("AccountsOfTheLevel");
                });

            modelBuilder.Entity("LBS2.Entities.Book", b =>
                {
                    b.Navigation("BelongsToCatgegories");

                    b.Navigation("Borrowings");
                });

            modelBuilder.Entity("LBS2.Entities.Category", b =>
                {
                    b.Navigation("BooksBelongsToCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
